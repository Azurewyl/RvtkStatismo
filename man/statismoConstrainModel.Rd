% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConstrainedModel.r
\docType{methods}
\name{statismoConstrainModel}
\alias{statismoConstrainModel}
\alias{statismoConstrainModel,pPCA,matrix,matrix-method}
\alias{statismoConstrainModel,pPCA,matrix,numeric-method}
\alias{statismoConstrainModel,pPCA,numeric,numeric-method}
\title{constrain a model of class pPCA}
\usage{
statismoConstrainModel(model, sample, pt, ptValueNoise)

\S4method{statismoConstrainModel}{pPCA,matrix,matrix}(model, sample, pt,
  ptValueNoise)

\S4method{statismoConstrainModel}{pPCA,matrix,numeric}(model, sample, pt,
  ptValueNoise)

\S4method{statismoConstrainModel}{pPCA,numeric,numeric}(model, sample, pt,
  ptValueNoise)
}
\arguments{
\item{model}{object of class pPCA}

\item{sample}{k x 3 matrix containing coordinates to constrain model to}

\item{pt}{either a matrix with each row containing points on the model's domain corresponding to the row in \code{sample} or an integer vector specifying the coordinates of the sample's mean corresponding to \code{sample}}

\item{ptValueNoise}{numeric: specify noise on constraints.}
}
\value{
a constrained model
}
\description{
constrain a model of class pPCA
}
\examples{
require(Rvcg)
data(humface)
hummodel <- statismoModelFromRepresenter(humface)
GPmodConstUnif <- statismoConstrainModel(hummodel,humface.lm,humface.lm,ptValueNoise = 1)
\dontrun{
## sample from model
for(i in 1:10) rgl::wire3d(DrawSample(GPmodConstUnif),col="red")
}
noise <- (0:6)*5
GPmodConst <- statismoConstrainModel(hummodel,humface.lm,humface.lm,ptValueNoise = noise)
\dontrun{
## sample from model
for(i in 1:10) rgl::wire3d(DrawSample(GPmodConst),col="white")
}
}

